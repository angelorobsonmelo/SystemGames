package br.com.systemGames.excecao;

import java.util.ArrayList;
import java.util.List;
/**
 *  exce��o pai de todas as exce��es de todos os projetos em java
 */
public class VacinacaoException extends Exception {
  private List erroList = new ArrayList();

  public static final String SEPARADOR = "; ";

    /** Autogenerated proxy constructor. */
    public VacinacaoException() {
        super();
    }

    /** Autogenerated proxy constructor. */
    public VacinacaoException(String mensagemErro) {
        super(mensagemErro);
    }

    /** Autogenerated proxy constructor. */
    public VacinacaoException(Throwable a) {
        super(a);
    }
	
    public VacinacaoException(String mensagem, Exception e) {
      super(mensagem,e);
    }    
	
	/**
	 * Retira da mensagem de erro o caminho da classe que originou a exce��o. 
	 * Motiva��o: Melhor visualiza��o na camada de apresenta��o.
	 * Exemplo: 
	 * Mensagem completa: br.gov.al.sefaz.geradorrelatorioweb.negocio.bo.BOException: Campo NOME requerido
	 * Mensagem tratada:  Campo NOME requerido
	 * @return Mensagem tratada
	 */
	public String getMensagemTratada(){
		String mensagemCompleta = this.getMessage();
		String[] tokens = mensagemCompleta.split(": ");
		int indiceUltimoElemento = tokens.length -1;
		String mensagemTratada = tokens[indiceUltimoElemento];
		return mensagemTratada;
	}

	/**
	 * M�todo que retorna a mensagem de erro passando como parametro o indice.
	 * @param indice - indice da mensagem
	 * @return retorna a mensagem
	 */
	public String getMensagemErro(int indice){
		return erroList.get(indice).toString();
	}
	/**
	 * M�todo que adiciona uma mensagem na lista de erros.
	 * @param mensagem
	 */
	public void adicionarMensagemErro(String mensagem){
		erroList.add(mensagem);
	}
	public boolean hasMensagemErro(){
		return !erroList.isEmpty();
	}
	/**
	 * M�todo que redifine o m�todo da classe pai.
	 * Motiva��o: acumular� os erros em uma lista interna.
	 * @return 
	 */
   public String getMessage() {
		return hasMensagemErro() ? getMensagemVariosErros() : super.getMessage();		 
   }
	
	/**
	 * M�todo que retorna as mensagens de erro inseridas no BOException.
	 * @return Mensagem com os erros inseridos.
	 */
	private String getMensagemVariosErros(){
		StringBuffer mensagens = new StringBuffer("");
		final int INDICE_PRIMEIRO_ELEMENTO = 0;
        for (int i = INDICE_PRIMEIRO_ELEMENTO; i <= erroList.size() - 1; i++){
			mensagens.append(getMensagemErro(i));
			mensagens.append(SEPARADOR);			
		}
		return mensagens.substring(INDICE_PRIMEIRO_ELEMENTO, mensagens.length() - SEPARADOR.length());		
	}

}
